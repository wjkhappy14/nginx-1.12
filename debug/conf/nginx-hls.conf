
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


rtmp {
    drop_idle_publisher 5s;
    server {
        listen 10077;
        chunk_size 4000;

        application live {
            live on;

            #record keyframes;
            #record_path /tmp;
            #record_max_size 128K;
            #record_interval 30s;
            #record_suffix .this.is.flv;

            #on_publish http://localhost:8080/publish;
            #on_play http://localhost:8080/play;
            #on_record_done http://localhost:8080/record_done;
        }

          #HLS
          # For HLS to work please create a directory in tmpfs (/tmp/app here)
          # for the fragments. The directory contents is served via HTTP (see
          # http{} section in config)
          #
          # Incoming stream must be in H264/AAC. For iPhones use baseline H264
          # profile (see ffmpeg example).
          # This example creates RTMP stream from movie ready for HLS:
          #
          # ffmpeg -loglevel verbose -re -i movie.avi  -vcodec libx264 
          #    -vprofile baseline -acodec libmp3lame -ar 44100 -ac 1 
          #    -f flv rtmp://localhost:1935/hls/movie
          #
          # If you need to transcode live stream use 'exec' feature.
          #
          application hls {
              live on;
              hls on;
              hls_path ./html/hls;
              hls_fragment 5s;
          }
    }
}

http {
    include       mime.types;
    server {
        listen      10078;

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root ./;
        }

        location /control {
            rtmp_control all;
        }

        #location /publish {
        #    return 201;
        #}

        #location /play {
        #    return 202;
        #}

        #location /record_done {
        #    return 203;
        #}

        location /hls {
            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root ./html;
            expires -1;
        }

#        location /rtmp-publisher {
#            root ./test;
#        }

        location / {
            root ./www;
        }
    }
}